1       self.input = web.input()

2       self.domain = re.sub("https?://|www.","",web.ctx.get('host')
            ).split("/",1)[0]

3       self.method = web.ctx.get('method')

4       self.GET     = self.__Page_Front__
        self.POST    = self.__Page_Front__
        self.HEAD    = self.__Page_Front__
        self.PUT     = self.__Page_Front__
        self.DELETE  = self.__Page_Front__
        self.OPTIONS = self.__Page_Front__
        self.CONNECT = self.__Page_Front__

5       if self.__banned__():
            raise web.seeother('/banned')

6       try:

7           self.URL = FullURL

8           this_page = site_databases[self.domain].select("pages", 
                ("page", "method"), (self.URL,self.method))

9           try:
                arguments = json.loads(this_page[0][3])
            except:
                arguments = {}
    
10          try:
  a             self.info = web.cookies().get(this_page[0][5]).split(":",1)
                    ).split(":",1)

  b             self.perm = site_login[self.domain].session_out(self.info[0]
                    , self.info[1])
            except:
  c             self.perm = 0
    
11          if "type" in arguments.keys():
12              if arguments['type'] == 'login':
13                  username = self.input()[arguments['keywords'][0]]
                    password = self.input()[arguments['keywords'][1]]

14                  if site_login[self.domain].check_user(username,password):
15                     self.__set_cookie__(arguments['cookie'],web.input()
                           [arguments['keywords'][0]])

16          current_page = []
17          for page in this_page:
                if page[2] == self.perm:
                    current_page = page
                    break

21          page = web.template.Template(current_page[4])
            return page()
        except:

            return notfound()
